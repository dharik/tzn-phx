<%= form_for @changeset, @action, fn f -> %>
<%= if @changeset.action do %>
  <div class="form-message error">
    <p>Oops, something went wrong! Please check the errors below.</p>
  </div>
<% end %>
<script>
  document.addEventListener('alpine:init', () => {
      Alpine.data('mentor_timesheet_form', () => ({
        pod_id: null,
        mentee_name: "the mentee",
        mentee_grade: null,
        category: null,
        categories_no_pod:
          <%=
            Tzn.Timesheets.categories(@conn.assigns.current_mentor, nil)
            |> Jason.encode!()
            |> raw()
          %>,
        categories_by_pod:
        <%=
          Enum.reduce(
            @pods,
            Map.new(),
            fn (p, a) -> Map.put(a, p.id, Tzn.Timesheets.categories(@conn.assigns.current_mentor, p)) end
          )
          |> Jason.encode!()
          |> raw()
        %>,
        get categories() {
          if(this.pod_id) {
            return this.categories_by_pod[this.pod_id]
          } else {
            return this.categories_no_pod
          }
        },
        get is_valid_category() {
          if(!this.categories.find(c => c.slug === this.category)) {
            return false;
          }
          return true;
        },
        get loading() {
          return this.pod_loadstate == 'loading'
        },
        get todo_list_needs_update() {
          if(!this.pod_id) {
            return false;
          }

          <%= if @last_todo_updated_at && Tzn.Util.within_n_hours_ago(@last_todo_updated_at, 1) do %>
            return false;
          <% else %>
            return !this.any_notes_touched;
          <% end %>
        },
        mentee_notes_savestate: '',
        parent_notes_savestate: '',
        mentor_notes_savestate: '',
        any_notes_touched: false,
        pod_loadstate: '',
        async load_pod() {
          if(this.pod_id == "" || !this.pod_id) {
            this.pod_loadstate = '';
            this.mentee_name = "";
            this.mentee_grade = null;
            return;
          }

          try {
            this.pod_loadstate = 'loading';

            result = await fetch('/mentor/api/pods/' + this.pod_id, {
              method: 'GET'
            });


            if(result.ok) {
              const data = await result.json();

              // Hack to prevent autosave from triggering after loading a different mentee
              setTimeout(() => {
                this.any_notes_touched = false;
                this.pod_loadstate = 'success';
              }, 1300);

              this.mentee_name = data.name;
              this.mentee_grade = data.grade;
              this.mentee_notes_savestate = '';
              this.parent_notes_savestate = '';
              this.mentor_notes_savestate = '';

              this.$refs.mentor_notes.firstChild.innerHTML = data.mentor_todo_notes;
              this.$refs.parent_notes.firstChild.innerHTML = data.parent_todo_notes;
              this.$refs.mentee_notes.firstChild.innerHTML = data.mentee_todo_notes;
            } else {
              this.pod_loadstate = 'fail'
            }

          } catch(e) {
            this.pod_loadstate = 'fail'
            console.error(e)
          }

        },
        init() {
          <%=
          if @pod do
            "this.pod_id = #{@pod.id};"
          end
          %>
          <%=
            if category = Ecto.Changeset.get_field(@changeset, :category) do
              raw("this.category = \"#{category}\";")
            end
          %>


          var toolbarOpts = ['bold', 'italic', 'underline', 'strike', 'link', {'list': 'bullet'}, {'list': 'ordered'}]
          quill = new Quill(this.$refs.mentee_notes, {
            theme: 'snow',
            modules: {
              toolbar:toolbarOpts
            },
            placeholder: 'Please use bullet points to create a to-do list. :)'
          });

          quill.on('text-change', () => {
            this.$dispatch('mentee-notes-change');
          });

          quill = new Quill(this.$refs.mentor_notes, {
            theme: 'snow',
            modules: {
              toolbar: toolbarOpts
            },
            placeholder: 'Please use bullet points to create a to-do list. :)'
          });

          quill.on('text-change', (a, b, c) => {
            this.$dispatch('mentor-notes-change');
          });

          quill = new Quill(this.$refs.parent_notes, {
            theme: 'snow',
            modules: {
              toolbar: toolbarOpts
            },
            placeholder: 'Please use bullet points to create a to-do list. :)'
          });

          quill.on('text-change', (a, b, c) => {
            this.$dispatch('parent-notes-change');
          });

          this.load_pod();

          this.$watch('pod_id', () => this.load_pod());
        },
        async save_mentee_notes() {
          if(this.pod_loadstate !== 'success') {
            return;
          }

          this.mentee_notes_savestate = 'saving';

          try {
            result = await fetch('/mentor/pods/' + this.pod_id, {
              method: 'PATCH',
              body: JSON.stringify({
                mentee_todo_notes: this.$refs.mentee_notes.firstChild.innerHTML,
                _csrf_token: '<%= Phoenix.Controller.get_csrf_token() %>'
              }),
              headers: {
                'Content-Type': 'application/json',
              },
            });


            if(result.ok) {
               this.any_notes_touched = true;
              this.mentee_notes_savestate = 'success';
            } else {
              this.mentee_notes_savestate = 'fail'
            }
          } catch(e) {
            console.error(e)
            this.mentee_notes_savestate = 'fail';
          }
        },
        async save_mentor_notes() {
          if(this.pod_loadstate !== 'success') {
            return;
          }

          this.mentor_notes_savestate = 'saving';

          try {
            result = await fetch('/mentor/pods/' + this.pod_id, {
              method: 'PATCH',
              body: JSON.stringify({
                mentor_todo_notes: this.$refs.mentor_notes.firstChild.innerHTML,
                _csrf_token: '<%= Phoenix.Controller.get_csrf_token() %>'
              }),
              headers: {
                'Content-Type': 'application/json',
              },
            });


            if(result.ok) {
              this.any_notes_touched = true;
              this.mentor_notes_savestate = 'success';
            } else {
              this.mentor_notes_savestate = 'fail'
            }
          } catch(e) {
            console.error(e)
            this.mentor_notes_savestate = 'fail';
          }
        },
        async save_parent_notes() {
          if(this.pod_loadstate !== 'success') {
            return;
          }

          this.parent_notes_savestate = 'saving';

          try {
            result = await fetch('/mentor/pods/' + this.pod_id, {
              method: 'PATCH',
              body: JSON.stringify({
                parent_todo_notes: this.$refs.parent_notes.firstChild.innerHTML,
                _csrf_token: '<%= Phoenix.Controller.get_csrf_token() %>'
              }),
              headers: {
                'Content-Type': 'application/json',
              },
            });


            if(result.ok) {
              this.any_notes_touched = true;
              this.parent_notes_savestate = 'success';
            } else {
              this.parent_notes_savestate = 'fail'
            }
          } catch(e) {
            console.error(e)
            this.parent_notes_savestate = 'fail';
          }
        }
      }))
  });
</script>
<div
  x-data="mentor_timesheet_form"
  @mentee-notes-change.debounce.1200ms="save_mentee_notes"
  @mentor-notes-change.debounce.1200ms="save_mentor_notes"
  @parent-notes-change.debounce.1200ms="save_parent_notes"
>

<div class="border-radius box-shadow-m padding-m margin-vertical-l ">
  <h2>Select mentee</h2>

    <%
      mentee_options = [
        {"No specific mentee - general / admin work", nil}
        | Enum.map(@pods, fn pod ->  {pod.mentee.name, pod.id} end)
      ]
    %>

    <%= select f, :pod_id, mentee_options, "x-model.number": "pod_id", ":disabled": "loading" %>
    <%= error_tag f, :pod_id %>

</div>


<div class="spinner margin-vertical-l" x-show="loading"></div>



<div
  x-show="pod_id && pod_loadstate == 'success'"
  class="border-radius box-shadow-m padding-m margin-vertical-l"
  >
  <h2>To-Do Lists for <span x-text="mentee_name"></span>, Their Parents, and You!</h2>

  What should <span x-text="mentee_name"></span> be working on?
  <div x-ref="mentee_notes"></div>
  <span class="form-message success" x-show="mentee_notes_savestate === 'success'">✓ Saved</span>
  <span class="form-message" x-show="mentee_notes_savestate === 'saving'">Saving...</span>
  <span class="form-message error" x-show="mentee_notes_savestate === 'fail'">Unable to save</span>

  <div class="space-l"></div>

  What can their parent be helping them get done?
  <div x-ref="parent_notes"></div>
  <span class="form-message success" x-show="parent_notes_savestate === 'success'">✓ Saved</span>
  <span class="form-message" x-show="parent_notes_savestate === 'saving'">Saving...</span>
  <span class="form-message error" x-show="parent_notes_savestate === 'fail'">Unable to save</span>

  <div class="space-l"></div>

  What will you be working on for <span x-text="mentee_name"></span> outside of meeting times?
  <div x-ref="mentor_notes"></div>
  <span class="form-message success" x-show="mentor_notes_savestate === 'success'">✓ Saved</span>
  <span class="form-message" x-show="mentor_notes_savestate === 'saving'">Saving...</span>
  <span class="form-message error" x-show="mentor_notes_savestate === 'fail'">Unable to save</span>
</div>


<div
  class="border-radius box-shadow-m padding-m margin-vertical-l"
   x-show="!loading"
  >
    <h2>Select category</h2>

    <select x-model="category" name="<%= input_name f, :category %>">
      <option value="" disabled :selected="!is_valid_category">-- Select a category --</option>
      <template x-for="c in categories" :key="c.slug">
        <option :value="c.slug" x-text="c.name" :selected="c.slug === category"></option>
      </template>
    </select>

    <p class="form-message error" x-show="!is_valid_category">Category needs to updated</p>
    <%= error_tag f, :category %>
</div>

<div
  class="border-radius box-shadow-m padding-m margin-vertical-l"
   x-show="pod_id && pod_loadstate === 'success'"
  >
  <h2>Enter Grade</h2>
  <%= select f, :mentee_grade, Tzn.Util.grade_options(), ["x-model": "mentee_grade"] %>
  <%= error_tag f, :mentee_grade %>
</div>

<div
  class="border-radius box-shadow-m padding-m margin-vertical-l"
   x-show="!loading"
  >
  <h2>Enter Timesheet Information</h2>

  <%= label f, :started_at %>
  <%= datetime_local_input f, :started_at %>
  <%= error_tag f, :started_at %>

  <%= label f, :ended_at %>
  <%= datetime_local_input f, :ended_at %>
  <%= error_tag f, :ended_at %>

  <div x-show="!pod_id">
    <div class="space-m"></div>
    <%= label f, :notes %>
    <%= textarea f, :notes, class: "rte"%>
    <%= error_tag f, :notes %>
  </div>

  <div class="space-m"></div>

  <div>
    <p class="form-message warning" x-show="todo_list_needs_update">To-do list needs to be updated</p>
    <%= submit "Save", class: "button-primary", ":disabled": "todo_list_needs_update || !is_valid_category" %>
  </div>

</div>

<% end %>

<div class="space-l"></div>
